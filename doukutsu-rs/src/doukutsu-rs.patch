diff --git a/Cargo.toml b/Cargo.toml
index 250ad93..c9733ef 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -80,8 +80,8 @@ num-traits = "0.2"
 open = "3.2"
 paste = "1.0"
 pelite = { version = ">=0.9.2", default-features = false, features = ["std"] }
-sdl2 = { git = "https://github.com/doukutsu-rs/rust-sdl2.git", rev = "f2f1e29a416bcc22f2faf411866db2c8d9536308", optional = true, features = ["unsafe_textures", "bundled", "static-link"] }
-sdl2-sys = { git = "https://github.com/doukutsu-rs/rust-sdl2.git", rev = "f2f1e29a416bcc22f2faf411866db2c8d9536308", optional = true, features = ["bundled", "static-link"] }
+sdl2 = { git = "https://github.com/doukutsu-rs/rust-sdl2.git", rev = "f2f1e29a416bcc22f2faf411866db2c8d9536308", optional = true, features = ["unsafe_textures", "use-pkgconfig"] }
+sdl2-sys = { git = "https://github.com/doukutsu-rs/rust-sdl2.git", rev = "f2f1e29a416bcc22f2faf411866db2c8d9536308", optional = true, features = ["use-pkgconfig"] }
 rc-box = "1.2.0"
 serde = { version = "1", features = ["derive"] }
 serde_derive = "1"
@@ -97,7 +97,7 @@ xmltree = "0.10"
 
 #hack to not link SDL_image on Windows(causes a linker error)
 [target.'cfg(not(target_os = "windows"))'.dependencies]
-sdl2 = { git = "https://github.com/doukutsu-rs/rust-sdl2.git", rev = "f2f1e29a416bcc22f2faf411866db2c8d9536308", optional = true, features = ["image", "unsafe_textures", "bundled", "static-link"] }
+sdl2 = { git = "https://github.com/doukutsu-rs/rust-sdl2.git", rev = "f2f1e29a416bcc22f2faf411866db2c8d9536308", optional = true, features = ["image", "unsafe_textures", "use-pkgconfig"] }
 
 [target.'cfg(target_os = "windows")'.dependencies]
 winapi = { version = "0.3", features = ["winuser"] }
diff --git a/src/framework/backend_sdl2.rs b/src/framework/backend_sdl2.rs
index 6851f0a..3a84366 100644
--- a/src/framework/backend_sdl2.rs
+++ b/src/framework/backend_sdl2.rs
@@ -169,7 +169,7 @@ impl SDL2EventLoop {
 
         let gl_attr = video.gl_attr();
 
-        gl_attr.set_context_profile(GLProfile::Compatibility);
+        gl_attr.set_context_profile(GLProfile::GLES);
         gl_attr.set_context_version(2, 1);
 
         let mut win_builder = video.window("Cave Story (doukutsu-rs)", size_hint.0 as _, size_hint.1 as _);
diff --git a/src/game/settings.rs b/src/game/settings.rs
index e598415..aa91df8 100644
--- a/src/game/settings.rs
+++ b/src/game/settings.rs
@@ -140,20 +140,20 @@ fn default_screen_shake_intensity() -> ScreenShakeIntensity {
 
 #[inline(always)]
 fn default_p1_controller_type() -> ControllerType {
-    if cfg!(any(target_os = "horizon")) {
+    // if cfg!(any(target_os = "horizon")) {
         ControllerType::Gamepad(0)
-    } else {
-        ControllerType::Keyboard
-    }
+    // } else {
+    //     ControllerType::Keyboard
+    // }
 }
 
 #[inline(always)]
 fn default_p2_controller_type() -> ControllerType {
-    if cfg!(any(target_os = "horizon")) {
+    // if cfg!(any(target_os = "horizon")) {
         ControllerType::Gamepad(1)
-    } else {
-        ControllerType::Keyboard
-    }
+    // } else {
+    //     ControllerType::Keyboard
+    // }
 }
 
 #[inline(always)]
diff --git a/src/menu/settings_menu.rs b/src/menu/settings_menu.rs
index ad4fbaf..4cc3664 100644
--- a/src/menu/settings_menu.rs
+++ b/src/menu/settings_menu.rs
@@ -375,8 +375,8 @@ impl SettingsMenu {
             MenuEntry::Active(state.loc.t("menus.options_menu.behavior").to_owned()),
         );
 
-        self.main
-            .push_entry(MainMenuEntry::Links, MenuEntry::Active(state.loc.t("menus.options_menu.links").to_owned()));
+        //self.main
+        //    .push_entry(MainMenuEntry::Links, MenuEntry::Active(state.loc.t("menus.options_menu.links").to_owned()));
 
         self.links
             .push_entry(LinksMenuEntry::Title, MenuEntry::Disabled(state.loc.t("menus.options_menu.links").to_owned()));
@@ -392,11 +392,11 @@ impl SettingsMenu {
         );
         self.links.push_entry(LinksMenuEntry::Link(GETPLUS_LINK), MenuEntry::Active("Get Cave Story+".to_owned()));
 
-        #[cfg(not(any(target_os = "horizon")))]
-        self.main.push_entry(
-            MainMenuEntry::Advanced,
-            MenuEntry::Active(state.loc.t("menus.options_menu.advanced").to_owned()),
-        );
+        //[cfg(not(any(target_os = "horizon")))]
+        //self.main.push_entry(
+        //    MainMenuEntry::Advanced,
+        //    MenuEntry::Active(state.loc.t("menus.options_menu.advanced").to_owned()),
+        //);
 
         self.advanced.push_entry(
             AdvancedMenuEntry::Title,
